version: "3.8"

networks:
  mynetwork:
    driver: bridge

services:
  app:
    container_name: searchapp
    build: .
    ports:
      - "5000:5000"
    image: searchapp
    depends_on:
      - mongodb
      - postgres
    links:
      - mongodb
      - postgres
    volumes:
     - './:/src'
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - PYTHONDONTWRITEBYTECODE=1
      - POSTGRES_DB_HOST=postgres 
      - POSTGRES_DB_PORT=5432
      - POSTGRES_DB_USER=postgres
      - POSTGRES_DB_PASSWORD=postgres 
      - POSTGRES_DB_NAME=users
      - MONGO_DB_HOST=mongodb
      - MONGO_DB_PORT=27017
      - MONGO_DB_USER=root
      - MONGO_DB_PASSWORD=pass
      - MONGO_DB_NAME=tweets
    networks:
      - mynetwork

  mongodb:
    container_name: mongodb
    image: mongo:latest
    hostname: mongodb_final_project_cluster
    environment:
      - MONGO_INITDB_DATABASE=tweets
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    ports:
      - "27017:27017"
    networks:
      - mynetwork

  postgres:
    container_name: postgres
    image: postgres:latest
    hostname: postgresdb_final_project_cluster
    restart: always
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres ## 
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - mynetwork

volumes:
  db:
    driver: local
